{% block uploadable_file_widget %}
{% spaceless %}
    {% set type = type|default('text') %}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>


    {% if value is not empty %}
        <label style="display:inline" for="delete_{{ name }}">
            <input style="margin-top:-3px" id="delete_{{ name }}" name="delete_images[{{ name }}]" type="checkbox" />
            REMOVE
        </label>

        <a style="margin-left:20px" class="btn btn-default" href="{{ path('admin_teo_product_image_crop', { "src": rel_path }) }}">
            <i class="icon-picture"></i> Crop
        </a>

        {% if image_info is not empty %}
            <p>
                {% if 0 in image_info|keys %}
                    <small>Image size: {{ image_info[0] }} x {{ image_info[1] }} px</small><br>
                {% endif %}
                {% if 'mime' in image_info|keys %}
                    <small>Mime: {{ image_info['mime'] }}</small>
                {% endif %}
                {% if 2 in image_info|keys %}
                    <small> (Type {{ image_info[2] }})</small><br>
                {% endif %}
                {% if 'bits' in image_info|keys %}
                    <small>Bit: {{ image_info['bits'] }}</small>
                {% endif %}
                {% if 'channels' in image_info|keys %}
                    <small> Channels: {{ image_info['channels'] }}</small>
                {% endif %}
            </p>
        {% endif %}
    {% endif %}

{% endspaceless %}
{% endblock uploadable_file_widget %}

{% block uploadable_file_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " control-label" }) %}

        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}

        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}

        {% if in_list_checkbox is defined and in_list_checkbox and widget is defined %}
            <label{% for attrname,attrvalue in attr %} {{attrname}}="{{attrvalue}}"{% endfor %}>
                {{ widget|raw }}
                <span>
                    {% if not sonata_admin.admin %}
                        {{- label|trans({}, translation_domain)|raw -}}
                    {% else %}
                        {{- label|trans({}, sonata_admin.field_description.translationDomain)|raw -}}
                    {% endif%}
                </span>
            </label>
        {% else %}
            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {% if not sonata_admin.admin%}
                    {{- label|trans({}, translation_domain)|raw -}}
                {% else %}
                    {{ sonata_admin.admin.trans(label, {}, sonata_admin.field_description.translationDomain)|raw }}
                {% endif %}
                {{ required ? '*' : '' }}
            </label>
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endblock uploadable_file_label %}

{% block colorpicker_widget %}
{% spaceless %}
    {% set type = type|default('text') %}
    <div id="sample_{{ id }}" style="{% if value is not empty %}background:{{value}};{% endif %}width:20px;height:20px;border:solid 1px #000;float: left;margin:4px 10px;"></div>
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    <script>
    $("#sample_{{ id }}").ColorPicker({
        onChange: function (hsb, hex, rgb) {
            $("#sample_{{ id }}").css('background', '#' + hex);
            $("#{{ id }}").val('#' + hex);
        }
    });
    </script>
{% endspaceless %}
{% endblock colorpicker_widget %}

{% block colorpicker_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}</label>
    {% endif %}
{% endspaceless %}
{% endblock colorpicker_label %}